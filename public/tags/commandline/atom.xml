














    
        
    

    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<feed  xml:lang="en"  xmlns="http://www.w3.org/2005/Atom">
    
        <author>
            
                <email>example@example.com</email>
            

            
                <name>John Doe</name>
            

            
                <uri>https://example.com</uri>
            
        </author>
    

    
        <icon>http://localhost:1313/</icon>
    

    <id>tag:localhost:1313,0001-01-01:/tags/commandline/atom.xml</id>

    
        

        
            
        

        
            <link href="http://localhost:1313/tags/commandline/atom.xml" rel="self" type="application/atom+xml"/>
        
    
        

        
            
        

        
            <link href="http://localhost:1313/tags/commandline/" rel="alternate" type="text/html"/>
        
    
        

        

        
            <link href="http://localhost:1313/tags/commandline/rss.xml" rel="alternate" type="application/rss+xml"/>
        
    

    

    
        <logo>http://localhost:1313/</logo>
    

    
        <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
    

    

    <title type="html"><![CDATA[Commandline · Tags · About]]></title>
    <updated>2024-05-30T00:00:00-07:00</updated>

    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p><em>For personal reference:</em></p>
<p>Lately, I&rsquo;ve been doing loads of CSV processing on the terminal with lots of string replacing/splitting. There are probably better (shorter) ways to do this but I&rsquo;ve been leaning on <code>awk</code> a lot recently.</p>
<p>Some examples.</p>
<p>{% highlight shell %}</p>
<h1 id="one-line-separator-replace">One-line separator replace:</h1>
<p>$ echo &ldquo;1,2,3,4,5&rdquo; | awk &lsquo;{gsub(/,/,&quot; &ldquo;);print}&rsquo;
1 2 3 4 5</p>
<h1 id="then-i-can-use-it-with-something-like">Then I can use it with something like:</h1>
<p>for v in $(echo &ldquo;1,2,3,4,5&rdquo; | awk &lsquo;{gsub(/,/,&rdquo; &ldquo;);print}&rsquo;); do echo &ldquo;val=$v&rdquo;; done
val=1
val=2
val=3
val=4
val=5</p>
<h1 id="another-separator">Another separator:</h1>
<p>$ echo &ldquo;1|2|3|4|5&rdquo; | awk &lsquo;{gsub(/|/,&rdquo;,&quot;);print}&rsquo;
1,2,3,4,5</p>
<h1 id="join-multiple-lines-with-a-separator">Join multiple lines with a separator&hellip;</h1>
<h1 id="ref-httpswwwbaeldungcomlinuxjoin-multiple-lines">Ref: <a href="https://www.baeldung.com/linux/join-multiple-lines">https://www.baeldung.com/linux/join-multiple-lines</a></h1>
<p>$ cat file.txt
one
two
three
four
five
five</p>
<h1 id="while-removing-duplicates">&hellip;while removing duplicates:</h1>
<p>$ cat file.txt | uniq | awk -v d=&quot;,&quot; &lsquo;{s=(NR==1?s:s d)$0}END{print s}&rsquo;
one,two,three,four,five
{% endhighlight %}</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2020-06-17-string-split-awk/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2020-06-17-string-split-awk/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[Simple string manipulations (splits/replaces) with awk]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>This is just a quick one.</p>
<p>Although I use <a href="https://wiki.gnome.org/Apps/Clocks">Gnome Clocks</a> occassionally, most of the time I set an alarm via the commandline.</p>
<p>{% highlight shell %}</p>
<h1 id="os-is-pop_os-using-vlc">OS is POP_OS!, using VLC:</h1>
<p>$ sleep 10m &amp;&amp; <br>
cvlc ~/alarm.mp3 &ndash;play-and-exit &amp;&amp; <br>
notify-send &lsquo;alarm done&rsquo;
{% endhighlight %}</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2021-11-08-alarm-from-cmdline/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2021-11-08-alarm-from-cmdline/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[Setting alarm from commandline]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
</feed>
