














    
        
    

    
        
    

    
        
    

    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<feed  xml:lang="en"  xmlns="http://www.w3.org/2005/Atom">
    
        <author>
            
                <email>example@example.com</email>
            

            
                <name>John Doe</name>
            

            
                <uri>https://example.com</uri>
            
        </author>
    

    
        <icon>http://localhost:1313/</icon>
    

    <id>tag:localhost:1313,0001-01-01:/tags/startup/atom.xml</id>

    
        

        
            
        

        
            <link href="http://localhost:1313/tags/startup/atom.xml" rel="self" type="application/atom+xml"/>
        
    
        

        
            
        

        
            <link href="http://localhost:1313/tags/startup/" rel="alternate" type="text/html"/>
        
    
        

        

        
            <link href="http://localhost:1313/tags/startup/rss.xml" rel="alternate" type="application/rss+xml"/>
        
    

    

    
        <logo>http://localhost:1313/</logo>
    

    
        <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
    

    

    <title type="html"><![CDATA[Startup · Tags · About]]></title>
    <updated>2024-01-18T21:32:52-07:00</updated>

    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>I posted a <a href="https://labs.alphaus.cloud/blog/2024/05/13/the-divs-model/">blog</a> introducing the DIVS model, the process we use at <a href="https://www.alphaus.cloud/">Alphaus</a>, the startup I work for. Check it out <a href="https://labs.alphaus.cloud/blog/2024/05/13/the-divs-model/">here</a>.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2024-05-13-the-divs-model/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2024-05-13-the-divs-model/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[The DIVS model]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>When it comes to tech stack selection, in general, I always approach it in terms of tradeoffs. And when it comes to understanding tradeoffs; what you gain vs what you lose, I think experience plays a big part. In my 18+ years of experience building systems, I&rsquo;ve been bitten enough times that I view most of them with a fair bit of cynicism. I wouldn&rsquo;t really say that experience definitely makes me better at it; I still have my own biases and experience doesn&rsquo;t really &lsquo;fix&rsquo; the illogical side of me being a human being with emotions. It gets in the way at times. Then there&rsquo;s the business side of it as well. An example would be to maintain business relations, or to honor partnership agreements, I would need to use (or integrate into) some tech stacks that I wouldn&rsquo;t normally choose in the first place. And to add to all of these, I also work in a startup with limited resources so there are other criteria that have a bigger influence on my approach to balancing tradeoffs. And at our phase right now, probably the biggest one is cost. Not just monetary but engineering costs as well: cost of operating and managing these systems. And I must admit that cost considerations is at times so pervasive to me that I would choose a technology purely because I got a significant discount for it even though at the back of my head, I know it&rsquo;s going to come back to me later on. So much for experience, huh.</p>
<p>The other criteria would be expertise. With our current budget, there is a certain ceiling to the level of engineering expertise I can afford to hire. And so far, ICs or principal level engineers who could handle such decisions for me are still out of my reach. So I still end up making the decisions most of the time. The one or two engineers I have who are fairly knowledgeable about systems and infrastructure are also doing development and technical support at the same time that there&rsquo;s just not enough time to do validations. They will have opinions of course based on their readings and experience but at the end of the day, I know that they didn&rsquo;t have enough time to validate so I roughly know the level of confidence they have on their opinions. And speaking of opinions, I am more interested in roughly knowing about the caveats, horror stories, real user feedback, etc., that means checking Reddit, Mastodon, Twitter to some extent, engineering blog posts, GitHub issues, HackerNews, etc. I would say that this is almost always a requirement of mine to myself as part of my due diligence.</p>
<p>One thing that I enjoy in all of these however is the part where I do a small prototype of the tech in question. It&rsquo;s not all the time but when I do, it&rsquo;s always a good feeling. It gives me a sense of what the tech is about, what it can do, how it works (sort of), etc. For the core parts of our systems, I think this is pretty much already an imposed personal requirement.</p>
<p>With all these requirements in mind, one might say that I will just end up choosing boring, mature, proven, old school tech all the way. For the most part, yes, but I&rsquo;m also aware that tech is also part of the hiring strategy. New tech being exciting for most engineers is probably a safe assumption to make so there is also that consideration. With that said though, I&rsquo;m very careful with this criteria. Over the years, I&rsquo;ve come to accept that building systems is engineering/programming over time. Engineers come and go. And tech is evolving at a rapid pace. And so does expertise and opinions evolve with it. Systems are dynamic; they are reshaped and redesigned by the people working on them over time so you will eventually end up with an amalgamation of all sorts of things, even beliefs and convictions. And when all is said and done, the systems running in the company is ultimately my responsibility; I can&rsquo;t just put the blame on somebody when things go wrong just because it was their choice and not mine. This leads me to another thing in my criteria: migration. For long-running systems, migrations are a matter of when, not if. I will try to imagine how it&rsquo;s going to look like, how painful it will be, and roughly how expensive it will be when the time comes. Then balance it out with us being a startup where the possibility of throwing away code, tech, product(s) even, at any time, along with the engineering behind it, is pretty high.</p>
<p>Expanding on the migration bit, this is probably my first time dealing with systems with colossal amounts of data so the considerations for migration is significantly important. This covers our choices of data lakes, high traffic messaging systems, databases, and migrations between these systems. Based on experience, migrations of data-related systems or systems revolving around data are the most protracted and the most painful. Much more so than, say, compute.</p>
<p>What about hype, or in GitHub for example, the number of stars a project have? Or in Twitter/Reddit, the chatter? In a way, they are an important consideration as well. Hype results to more early users, which means more feedback, which means more bugs reported, which means more bug fixes. The hype bit though; I&rsquo;ve been through several hype cycles of tech already that in a way, I can filter them out easily and see through the marketing PR. And I think I&rsquo;m not really alone in this. Most of the colleagues I talk to with long-ish experiences under their belt, it&rsquo;s true to them as well.</p>
<p>So, how do I keep track with all of these information around criteria? Journaling. I take notes on all of them. I&rsquo;m still working on the organization part of it though. It was and is a need so I&rsquo;m sort of forced into it. But overtime, I think I&rsquo;ve improved a lot on my documentations (and writing them) and it has grown on me so I don&rsquo;t mind it now.</p>
<p>Alright, that&rsquo;s it for now. See you in the next one.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2023-04-01-cto-diaries-on-choosing-tech-stack/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2023-04-01-cto-diaries-on-choosing-tech-stack/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[CTO Diaries #3: On choosing technology stacks]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>Hi. It’s been a year since my last「CTO diaries」post. Never mind the excuses, there’s a lot.</p>
<p>Anyway, so what does my typical, or normal day, look like? Well, I usually start the day with checking the overall health of our systems. We don’t really have very sophisticated monitoring and alerting systems at this point so this means checking on several areas such as our Kubernetes clusters, databases, and critical services. On top of my head, I think the most common service crashes I noticed so far are OOM-related.</p>
<p>I also check our month-to-date infrastructure spending. We use bits of the three (AWS, GCP, and Azure). I don’t really do this meticulously; more like checking for anomalies. We’ve been hacked several times in the past for mining and these usually show up as cost anomalies. I can also keep an eye on unpredictable usages such as data transfers. Our runway is one of the many things in my list of concerns so I’d like to keep an eye on runaway costs as much as I can.</p>
<p>A huge chunk of the day is spent doing admin tasks. In our current phase, I’m actually more of an engineering manager than a CTO. I take part in daily standups, backlog grooming, dealing with developer blockers, schedules and priorities, interfacing with technical support, product, and customer success teams. While these are fairly straightforward, I would say that the additional overhead of “context-switching” between Japanese and English is surprisingly high, at least for me. The constant worry of whether I was able to communicate what I wanted to communicate, and all the nuances that come with that, is always there. Writing on top of verbal communication always helps.</p>
<p>Then 1-on-1’s. It’s not daily but it takes a huge amount of my time and energy. It’s not really that bad overall but it’s probably the most exhausting, personally. Dealing with people, with different personalities, is always a challenge, both at work and outside. I’m not a people-person really; my EQ leaves a lot to be desired. But I like to think that I’m getting good at it though.</p>
<p>Another part of my typical day is reading. Anything that I deem beneficial really; technical articles and papers, new developments in technology that are related to our domain, applied psychology — interestingly, business and startups, the lot. I would say this is probably the part I enjoy the most.</p>
<p>Last is coding, which I usually do during the wee hours of the night. Not core codebase though, mind, but support code such as tooling, CI/CD, and scaling. This is probably out of necessity more than anything. I don’t really enjoy coding that much anymore, even before I became CTO but we still can’t afford domain experts at the moment so I contribute as much as I can.</p>
<p>I’ll probably write about the other bits like participating in investor meetings, sync-ups with other executives, etc. on a separate post.</p>
<p>Alright, that&rsquo;s it. See you in the next one.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2022-09-27-cto-diaries-typical-day/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2022-09-27-cto-diaries-typical-day/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[CTO Diaries #2: Typical day]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>So far, I&rsquo;ve been posting some techy stuff here and there but being a CTO of a relatively small, Japan-based startup for about three years now, I thought I&rsquo;d share some of my experiences along the way. But first off, a little bit of context: the company I work for, <a href="https://alphaus.cloud/">Alphaus Cloud</a> is fairly small; about 10 engineers scattered across three countries, although at one point, we hit at around 35. It started around 2015, did three product pivots, three rounds of funding under two CEOs. At the moment, we operate within the Cloud FinOps (financial operations) segment of the market. As for myself, I am what you would consider an &lsquo;accidental CTO&rsquo;, a term I came across from <a href="https://cto.academy/diary-of-an-accidental-cto-part-1/">CTO Academy</a>, and a term I quite like: i.e. &ldquo;someone who arrived in the CTO role ahead of schedule and is grappling with new challenges and very steep learning curve&rdquo;. You can call it luck, although that would be relative, depending on one&rsquo;s interpretation. Also, Japanese is not my native tongue, although I think I can hold my own in day-to-day conversations, nor is English, but I think I&rsquo;m fairly proficient at it. And even though the company is trying to expand its operations outside of Japan, it is still inherently Japanese as far as business operations are concerned: the CEO/COO, sales, customer success teams are Japanese, investors are Japanese, and majority of our clients are also Japanese companies.</p>
<p>The CTO role in such a setup is quite unclear. Even though I had some experience leading tech teams in the past, nothing could have prepared me for this role. For one, my blunders are now more costly. My decisions now affect multiple teams, not just the engineering team. I have to undestand the business side of the company. I need to understand company financials. My &lsquo;soft skills&rsquo; now matter more than ever; people, relationships, empathy, politics, the lot: they&rsquo;re probably more difficult, and exhausting, than the technology part of my role. With that said though, overall, I&rsquo;m enjoying it so far. There&rsquo;s a certain charm to it that I can&rsquo;t really explain; I thought I wouldn&rsquo;t like it at first, me being an introvert and all, but the challenges are instructional and character-building enough that I welcome, sort of, the stress associated with it.</p>
<p>My goal in this series is to share some of my experiences from this side of the world in the hopes that it will help others gain some perspective. Mind you, this is the internet, and these are just my opinions, take them with a pinch of salt. And finally, I&rsquo;m still not sure how to make this series more accessible from the blog. The &rsquo;tags&rsquo; section is probably the faster way to search for it for now. Maybe I&rsquo;ll provide a dedicated page in the future, who knows, we&rsquo;ll see.</p>
<p>Alright, that&rsquo;s it. See you in the next one.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2021-09-28-cto-diaries-intro/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2021-09-28-cto-diaries-intro/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[CTO Diaries #1: Introduction]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
</feed>
