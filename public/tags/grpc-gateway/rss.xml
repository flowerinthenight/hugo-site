













    

    
        
    

    

    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"  xml:lang="en"  xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        
            

            
                
            

            
                <link href="http://localhost:1313/tags/grpc-gateway/atom.xml" rel="self" type="application/atom+xml"/>
            
        
            

            
                
            

            
                <link href="http://localhost:1313/tags/grpc-gateway/" rel="alternate" type="text/html"/>
            
        
            

            

            
                <link href="http://localhost:1313/tags/grpc-gateway/rss.xml" rel="alternate" type="application/rss+xml"/>
            
        

        

        
            <copyright>© Flowerinthenight, 2016-2024. All rights reserved.</copyright>
        

        <description>Recent content</description>

        
            <language>en</language>
        

        

        <link>http://localhost:1313/tags/grpc-gateway/</link>

        
            <managingEditor>example@example.com (John Doe)</managingEditor>
        

        <title>Grpc-Gateway · Tags · About</title>

        
            <webMaster>example@example.com (John Doe)</webMaster>
        

        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>This is just a quick one.</p>
<p>I had some trouble making the <a href="https://developers.google.com/protocol-buffers/docs/proto3#any"><code>Any</code></a> protobuf type work when running <a href="https://github.com/grpc-ecosystem/grpc-gateway"><code>grpc-gateway</code></a> from a separate process with the gateway throwing an unknown message type error. A quick fix for this is to import the generated <code>pb.go</code> file to your proxy source. Something like:</p>
<p>{% highlight go %}
package main</p>
<p>import (
&hellip;</p>
<pre><code>_ &quot;github.com/username/pkgwithpbgo&quot;
</code></pre>
<p>)
{% endhighlight %}</p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,0001-01-01:/blog/2021-12-31-support-any-grpc-gateway-separate-process/</guid>

                
                    <link>http://localhost:1313/blog/2021-12-31-support-any-grpc-gateway-separate-process/</link>
                

                
                    <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
                

                
                    <title>Support the ‘Any’ protobuf type from an external grpc-gateway process</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>This might be hacky and there might be a proper way to do this but recently, I needed to generate all the functions&rsquo; gRPC-generated full names from our protobuf definitions. This is part of our RBAC module that needs to filter gRPC function calls. I got the list from our <a href="https://github.com/alphauslabs/blue-sdk-go">generated Go client</a> using the following command(s):</p>
<p>{% highlight shell %}</p>
<h1 id="main-command">Main command:</h1>
<p>$ grep -o -R -i -E &lsquo;&quot;/blueapi..*&quot;&rsquo; . | awk -F&rsquo;:&rsquo; &lsquo;{gsub(/&quot;/, &ldquo;&rdquo;, $2); print &ldquo;-&rdquo;, substr($2, 2);}&rsquo; | sort | uniq</p>
<h1 id="actual-commands-save-as-yaml">Actual commands; save as yaml:</h1>
<p>$ echo &ldquo;functions:&rdquo; &gt; /tmp/funcs.yaml
$ grep -o -R -i -E &lsquo;&quot;/blueapi..*&quot;&rsquo; . | awk -F&rsquo;:&rsquo; &lsquo;{gsub(/&quot;/, &ldquo;&rdquo;, $2); print &ldquo;-&rdquo;, substr($2, 2);}&rsquo; | <br>
sort | uniq &raquo; /tmp/funcs.yaml
{% endhighlight %}</p>
<p>The final list is uploaded to this <a href="https://github.com/alphauslabs/blueapi-functions">repository</a>.</p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,0001-01-01:/blog/2021-07-31-extracting-grpc-funcs-to-list/</guid>

                
                    <link>http://localhost:1313/blog/2021-07-31-extracting-grpc-funcs-to-list/</link>
                

                
                    <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
                

                
                    <title>Extract gRPC-generated functions to a list</title>
                
            </item>
        
    </channel>
</rss>
