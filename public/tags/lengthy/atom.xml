














    
        
    

    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<feed  xml:lang="en"  xmlns="http://www.w3.org/2005/Atom">
    
        <author>
            
                <email>example@example.com</email>
            

            
                <name>John Doe</name>
            

            
                <uri>https://example.com</uri>
            
        </author>
    

    
        <icon>http://localhost:1313/</icon>
    

    <id>tag:localhost:1313,0001-01-01:/tags/lengthy/atom.xml</id>

    
        

        
            
        

        
            <link href="http://localhost:1313/tags/lengthy/atom.xml" rel="self" type="application/atom+xml"/>
        
    
        

        
            
        

        
            <link href="http://localhost:1313/tags/lengthy/" rel="alternate" type="text/html"/>
        
    
        

        

        
            <link href="http://localhost:1313/tags/lengthy/rss.xml" rel="alternate" type="application/rss+xml"/>
        
    

    

    
        <logo>http://localhost:1313/</logo>
    

    
        <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
    

    

    <title type="html"><![CDATA[Lengthy · Tags · About]]></title>
    <updated>2024-05-30T00:00:00-07:00</updated>

    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>I have uploaded an example of how to handle lengthy processing of PubSub subscription messages in GitHub. If you are using PubSub and are, at times, struggling with PubSub default deadlines, you might find this example helpful. The code can be found <a href="https://github.com/flowerinthenight/gcp-pubsub-lengthy-consume">here</a>.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2018-08-13-gcp-pubsub-lengthy-process/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2018-08-13-gcp-pubsub-lengthy-process/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[GCP PubSub lengthy message processing]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>Before, I uploaded an example on how to handle lengthy processing of PubSub subscription messages in <a href="https://github.com/flowerinthenight/gcp-pubsub-lengthy-consume">GitHub</a>. This time, it&rsquo;s for AWS SQS. Have a look at the sample code <a href="https://github.com/flowerinthenight/sqs-lengthy-consume">here</a>.</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2018-10-05-aws-sqs-lengthy-process/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2018-10-05-aws-sqs-lengthy-process/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[AWS SQS lengthy message processing]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
</feed>
