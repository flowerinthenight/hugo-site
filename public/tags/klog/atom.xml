














    
        
    







    

    






<?xml version="1.0" encoding="utf-8"?>
<feed  xml:lang="en"  xmlns="http://www.w3.org/2005/Atom">
    
        <author>
            
                <email>example@example.com</email>
            

            
                <name>John Doe</name>
            

            
                <uri>https://example.com</uri>
            
        </author>
    

    
        <icon>http://localhost:1313/</icon>
    

    <id>tag:localhost:1313,0001-01-01:/tags/klog/atom.xml</id>

    
        

        
            
        

        
            <link href="http://localhost:1313/tags/klog/atom.xml" rel="self" type="application/atom+xml"/>
        
    
        

        
            
        

        
            <link href="http://localhost:1313/tags/klog/" rel="alternate" type="text/html"/>
        
    
        

        

        
            <link href="http://localhost:1313/tags/klog/rss.xml" rel="alternate" type="application/rss+xml"/>
        
    

    

    
        <logo>http://localhost:1313/</logo>
    

    
        <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
    

    

    <title type="html"><![CDATA[Klog · Tags · About]]></title>
    <updated>2024-05-30T00:00:00-07:00</updated>

    
        <entry>
            
            
            
            
            
            
            

            

            

            

            

            
                
            

            

            
                <content type="html"><![CDATA[<p>This post is somehow related to a <a href="https://flowerinthenight.com/blog/2017/12/01/golang-cobra-glog">previous article</a> about using <a href="https://github.com/golang/glog">glog</a> together with <a href="https://github.com/spf13/cobra">cobra</a>. This time, we will be using <a href="https://github.com/kubernetes/klog">klog</a> which is a Kubernetes fork of <a href="https://github.com/golang/glog">glog</a>.</p>
<p>{% gist c1d3267a6e5cc26b9025b4eed74ce00a %}</p>
<p>{% highlight shell %}</p>
<h1 id="run-the--h-command">run the -h command</h1>
<p>$ ./cobraklog -h
Usage of ./cobraklog:
-alsologtostderr
log to standard error as well as files
-log_backtrace_at value
when logging hits line file:N, emit a stack trace
-log_dir string
If non-empty, write log files in this directory
-log_file string
If non-empty, use this log file
-logtostderr
log to standard error instead of files
-skip_headers
If true, avoid header prefixes in the log messages
-stderrthreshold value
logs at or above this threshold go to stderr (default 2)
-v value
log level for V logs
-vmodule value
comma-separated list of pattern=N settings for file-filtered logging
{% endhighlight %}</p>
<p>{% highlight shell %}</p>
<h1 id="run-cobras-help-command">run cobra&rsquo;s <code>help</code> command</h1>
<p>$ ./cobraklog help
Use klog together with cobra.</p>
<p>Usage:
cobraklog [command]</p>
<p>Available Commands:
help        Help about any command
run         run command</p>
<p>Flags:
&ndash;alsologtostderr                  log to standard error as well as files
&ndash;log_backtrace_at traceLocation   when logging hits line file:N, emit a stack trace (default :0)
&ndash;log_dir string                   If non-empty, write log files in this directory
&ndash;log_file string                  If non-empty, use this log file
&ndash;logtostderr                      log to standard error instead of files
&ndash;skip_headers                     If true, avoid header prefixes in the log messages
&ndash;stderrthreshold severity         logs at or above this threshold go to stderr (default 2)
-v, &ndash;v Level                          log level for V logs
&ndash;vmodule moduleSpec               comma-separated list of pattern=N settings for file-filtered logging
-h, &ndash;help                             help for cobraklog</p>
<p>Use &ldquo;cobraklog [command] &ndash;help&rdquo; for more information about a command.
{% endhighlight %}</p>
<p>{% highlight shell %}</p>
<h1 id="run-help-on-our-subcommand-run">run <code>help</code> on our subcommand <code>run</code></h1>
<p>$ ./cobraklog help run
Run command.</p>
<p>Usage:
cobraklog run [flags]</p>
<p>Flags:
&ndash;str string   string to print (default &ldquo;hello world&rdquo;)
-h, &ndash;help         help for run</p>
<p>Global Flags:
&ndash;alsologtostderr                  log to standard error as well as files
&ndash;log_backtrace_at traceLocation   when logging hits line file:N, emit a stack trace (default :0)
&ndash;log_dir string                   If non-empty, write log files in this directory
&ndash;log_file string                  If non-empty, use this log file
&ndash;logtostderr                      log to standard error instead of files
&ndash;skip_headers                     If true, avoid header prefixes in the log messages
&ndash;stderrthreshold severity         logs at or above this threshold go to stderr (default 2)
-v, &ndash;v Level                          log level for V logs
&ndash;vmodule moduleSpec               comma-separated list of pattern=N settings for file-filtered logging
{% endhighlight %}</p>
<p>{% highlight shell %}</p>
<h1 id="run-the-run-subcommand">run the <code>run</code> subcommand</h1>
<p>$ ./cobraklog run &ndash;logtostderr
I0205 16:37:39.110849   13672 main.go:41] echo=hello world</p>
<p>$ ./cobraklog run &ndash;logtostderr &ndash;str &ldquo;hello alien world&rdquo;
I0205 16:39:37.212187   13685 main.go:41] echo=hello alien world
{% endhighlight %}</p>
]]></content>
            

            <id>tag:localhost:1313,0001-01-01:/blog/2019-02-05-golang-cobra-klog/</id>

            
                

                
                    

                    <link href="http://localhost:1313/blog/2019-02-05-golang-cobra-klog/" rel="alternate" type="text/html"/>
                
            

            

            

            
                <rights type="html"><![CDATA[© Flowerinthenight, 2016-2024. All rights reserved.]]></rights>
            

            

            <title type="html"><![CDATA[Using k8s.io/klog together with cobra in golang]]></title>
            <updated>0001-01-01T00:00:00Z</updated>
        </entry>
    
</feed>
